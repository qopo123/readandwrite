<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-3.2.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
    http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
    http://www.springframework.org/schema/util
    http://www.springframework.org/schema/util/spring-util-3.2.xsd">

	<!-- 数据统计过滤 -->
	<bean id="stat-filter" class="com.alibaba.druid.filter.stat.StatFilter"
		  lazy-init="true">
		<description>状态过滤器</description>
		<property name="slowSqlMillis" value="3000" />
		<property name="logSlowSql" value="true" />
		<property name="mergeSql" value="true" />
	</bean>

	<bean id="dataSource1" class="com.alibaba.druid.pool.DruidDataSource"
		  init-method="init" destroy-method="close">
		<!-- connection info -->
		<property name="driverClassName">
			<value>${jdbc.driver}</value>
		</property>
		<property name="url">
			<value>${jdbc1.url}</value>
		</property>
		<property name="username">
			<value>${jdbc.username}</value>
		</property>
		<property name="password">
			<value>${jdbc.password}</value>
		</property>
		<!-- 连接池最大使用连接数 -->
		<property name="maxActive">
			<value>${jdbc.pool.maxActive}</value>
		</property>
		<!-- 过滤器 -->
		<property name="proxyFilters">
			<list>
				<ref bean="stat-filter" />
			</list>
		</property>
		<!-- 初始化连接大小 -->
		<property name="initialSize">
			<value>${jdbc.pool.init}</value>
		</property>
		<!-- 获取连接最大等待时间 -->
		<property name="maxWait">
			<value>${jdbc.pool.maxWait}</value>
		</property>
		<!-- 连接池最小空闲 -->
		<property name="minIdle">
			<value>${jdbc.pool.minIdle}</value>
		</property>
		<!-- 自动清除无用连接 -->
		<property name="removeAbandoned">
			<value>${jdbc.pool.removeAbandoned}</value>
		</property>
		<!-- 清除无用连接的等待时间 -->
		<property name="removeAbandonedTimeout">
			<value>${jdbc.pool.removeAbandonedTimeout}</value>
		</property>
		<!-- 连接属性 -->
		<property name="connectionProperties">
			<value>clientEncoding=UTF-8</value>
		</property>
	</bean>
	<bean id="dataSource2" class="com.alibaba.druid.pool.DruidDataSource"
		  init-method="init" destroy-method="close">
		<!-- connection info -->
		<property name="driverClassName">
			<value>${jdbc.driver}</value>
		</property>
		<property name="url">
			<value>${jdbc2.url}</value>
		</property>
		<property name="username">
			<value>${jdbc.username}</value>
		</property>
		<property name="password">
			<value>${jdbc.password}</value>
		</property>
		<!-- 连接池最大使用连接数 -->
		<property name="maxActive">
			<value>${jdbc.pool.maxActive}</value>
		</property>
		<!-- 过滤器 -->
		<property name="proxyFilters">
			<list>
				<ref bean="stat-filter" />
			</list>
		</property>
		<!-- 初始化连接大小 -->
		<property name="initialSize">
			<value>${jdbc.pool.init}</value>
		</property>
		<!-- 获取连接最大等待时间 -->
		<property name="maxWait">
			<value>${jdbc.pool.maxWait}</value>
		</property>
		<!-- 连接池最小空闲 -->
		<property name="minIdle">
			<value>${jdbc.pool.minIdle}</value>
		</property>
		<!-- 自动清除无用连接 -->
		<property name="removeAbandoned">
			<value>${jdbc.pool.removeAbandoned}</value>
		</property>
		<!-- 清除无用连接的等待时间 -->
		<property name="removeAbandonedTimeout">
			<value>${jdbc.pool.removeAbandonedTimeout}</value>
		</property>
		<!-- 连接属性 -->
		<property name="connectionProperties">
			<value>clientEncoding=UTF-8</value>
		</property>
	</bean>

	<bean id="transactionManager"
		  class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
		  p:dataSource-ref="dataSource" />

	<!-- 对数据源进行事务管理 -->

	<!-- mybatis文件配置，扫描所有mapper文件 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean"
		p:dataSource-ref="dataSource" p:configLocation="classpath:/mybatis-config.xml">
		<property name="mapperLocations">
			<list>
				<value>classpath*:mapper/*.xml</value>
			</list>
		</property>
	</bean>

	<!-- spring与mybatis整合配置，扫描所有dao -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer"
		p:basePackage="com.hua.tpwg.dao"
		p:sqlSessionFactoryBeanName="sqlSessionFactory" />

	<bean id="dataSource" class="com.hua.tpwg.common.DymicDataSource">
		<property name="targetDataSources">
			<map key-type="java.lang.String">
				<!-- write -->
				<entry key="write" value-ref="dataSource1"/>
				<!-- read -->
				<entry key="read" value-ref="dataSource2"/>
			</map>

		</property>
		<property name="defaultTargetDataSource" ref="dataSource1"/>
	</bean>

	<tx:annotation-driven transaction-manager="transactionManager"
						  proxy-target-class="true" />

</beans>
